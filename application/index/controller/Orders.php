<?php

namespace app\index\controller;

use think\Controller;
use think\Db;
use think\Exception;
use think\Request;

class Orders extends Controller
{
    public $code;
    public $model;
    public $validate;
    public function __construct(Request $request = null)
    {
        parent::__construct($request);
        $this->code=config('code');
        $this->model=model('Orders');
        $this->validate=validate();
    }
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        checkUserToken();
    }

    /**
     * 显示资源列表
     *
     * @return \think\Response
     */
    public function index()
    {
        $get = $this->request->get();
        $status = $get['status'];
        $oid = $get['oid'];
        $result = $this->model->edit(['status'=>$status],$oid);
        if ($result){
            return json([
               'code'=>$this->code['success'],
               'msg'=>'订单状态变更成功'
            ]);
        }else{
            return json([
                'code'=>$this->code['fail'],
                'msg'=>'订单状态变更失败'
            ]);
        }
    }

    /**
     * 显示创建资源表单页.
     *
     * @return \think\Response
     */
    public function create()
    {
        //
    }

    /**
     * 保存新建的资源
     *
     * @param  \think\Request  $request
     * @return \think\Response
     */
    public function save(Request $request)
    {
        $data=$this->request->post();
//        $this->validate->scene()->check();
        $data['status'] = 1;
        $data['uid'] = $this->request->uid;
        $stayhomeModel = model('Stayhome');
        $stayhome = $stayhomeModel->queryOne(['sid'=>$data['sid']],'status');
        if ($stayhome['status']==0){
            return json([
               'code'=>$this->code['fail'],
                'msg'=>'该民宿已被预定'
            ]);
        }
        Db::startTrans();
        try {
            $orderResult = $this->model->add($data);
            $oid = $this->model->getLastInsID();
            $stayhomeResult = $stayhomeModel->edit(['status'=>0],$data['sid']);
            if ($orderResult && $stayhomeResult){
                Db::commit();
                return json([
                    'code'=>$this->code['success'],
                    'msg'=>'下单成功',
                    'data'=>$data,
                    'oid'=>$oid
                ]);
            }else{
                return json([
                    'code'=>$this->code['fail'],
                    'msg'=>'预定失败'
                ]);
            }
        }catch (Exception $exception){
            Db::rollback();
        }
    }

    /**
     * 显示指定的资源
     *
     * @param  int  $id
     * @return \think\Response
     */
    public function read($id)
    {
        //
    }

    /**
     * 显示编辑资源表单页.
     *
     * @param  int  $id
     * @return \think\Response
     */
    public function edit($id)
    {
        //
    }

    /**
     * 保存更新的资源
     *
     * @param  \think\Request  $request
     * @param  int  $id
     * @return \think\Response
     */
    public function update(Request $request, $id)
    {
        //
    }

    /**
     * 删除指定资源
     *
     * @param  int  $id
     * @return \think\Response
     */
    public function delete($id)
    {
        $sid = $this->model->queryValue(['oid'=>$id],'sid');
        Db::startTrans();
        try {
            $result=$this->model->quit(['oid'=>$id]);
            $stayhomeModel = model('Stayhome');
            $stayhome=$stayhomeModel->edit(['status'=>1],$sid);
            if ($result && $stayhome){
                Db::commit();
                return json([
                    'code'=>$this->code['success'] ,
                    'msg'=>'订单取消成功'
                ]);
            }else{
                return json([
                    'code'=>$this->code['fail'] ,
                    'msg'=>'订单取消失败'
                ]);
            }
        }catch (Exception $exception){
            Db::rollback();
        }
    }
}
